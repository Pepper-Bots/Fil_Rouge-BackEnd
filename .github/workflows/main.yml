name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.properties for CI
        run: |
          cat > src/main/resources/application.properties << EOF
          spring.datasource.url=jdbc:h2:mem:testdb
          spring.datasource.driver-class-name=org.h2.Driver
          spring.datasource.username=sa
          spring.datasource.password=
          spring.jpa.hibernate.ddl-auto=create-drop
          spring.sql.init.mode=never
          jwt.secret=${{ secrets.JWT_SECRET }}
          spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
          EOF

      - name: Set APP_NAME
        run: echo "APP_NAME=admin_mns_back" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Extract version from pom.xml
        id: extract_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }}

#name: Build and Push Docker Image
#
#on:
#  push:
#    branches:
#      - main  # DÃ©clencher le workflow sur les pushes vers la branche main
#      - dev
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Load .env file
#        run: |
#          set -a
#          source .env
#          set +a
#          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Update JWT Secret in application.properties
#        run: sed -i 's/${JWT_SECRET}/${{ secrets.JWT_SECRET }}/' src/main/resources/application.properties
#
#      - name: Build with Maven
#        run: mvn clean package
#
#      - name: Extract version from pom.xml
#        id: extract_version
#        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }}